import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import { useSelector, useDispatch } from 'react-redux';
import { removeItem, updateQuantity, clearCart } from '../../store/cartSlice';
import './basket.css';

const Basket = () => {
  const dispatch = useDispatch();
  const basketItems = useSelector((state) => state.cart.items);
  const [showContactForm, setShowContactForm] = useState(false);
  const [contactInfo, setContactInfo] = useState({
    name: '',
    phone: '',
    address: ''
  });
  
  // Calculate totals
  const subtotal = basketItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);
  const deliveryFee = 150;
  const total = subtotal + deliveryFee;

  const handleRemove = (id) => {
    dispatch(removeItem(id));
  };

  const handleQuantityChange = (id, change) => {
    const item = basketItems.find(item => item.id === id);
    if (item) {
      const newQuantity = item.quantity + change;
      if (newQuantity > 0) {
        dispatch(updateQuantity({ id, quantity: newQuantity }));
      } else {
        dispatch(removeItem(id));
      }
    }
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setContactInfo(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const sendOrderToTelegram = async () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –≤—Å–µ –ø–æ–ª—è
    if (!contactInfo.name || !contactInfo.phone || !contactInfo.address) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
      return;
    }

    try {
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
      const message = `–ù–û–í–´–ô –ó–ê–ö–ê–ó!\n\n` +
        `üë§ –ö–ª–∏–µ–Ω—Ç: ${contactInfo.name}\n` +
        `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${contactInfo.phone}\n` +
        `üè† –ê–¥—Ä–µ—Å: ${contactInfo.address}\n\n` +
        `üõí –¢–æ–≤–∞—Ä—ã:\n${basketItems.map(item => 
          `- ${item.name} (${item.quantity} –∫–≥) - ${item.price * item.quantity} ‚ÇΩ`
        ).join('\n')}\n\n` +
        `üí∞ –°—É–º–º–∞ —Ç–æ–≤–∞—Ä–æ–≤: ${subtotal} ‚ÇΩ\n` +
        `üöö –î–æ—Å—Ç–∞–≤–∫–∞: ${deliveryFee} ‚ÇΩ\n` +
        `üíµ –ò—Ç–æ–≥–æ: ${total} ‚ÇΩ`;
      
      // ID –≤–∞—à–µ–≥–æ Telegram –±–æ—Ç–∞ –∏ —á–∞—Ç–∞
      const botToken = '7261885668:AAHPeGrXqpUUDx6RSYwVV_1C1wVunEJnyJs';
      const chatId = '6064303468';
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
      const response = await fetch(
        `https://api.telegram.org/bot${botToken}/sendMessage`,
        {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            chat_id: chatId,
            text: message,
          }),
        }
      );

      if (response.ok) {
        alert('–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
        dispatch(clearCart()); // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        setShowContactForm(false); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        setContactInfo({ name: '', phone: '', address: '' }); // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
      } else {
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  };

  const handleCheckoutClick = () => {
    if (basketItems.length === 0) {
      alert('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!');
      return;
    }
    setShowContactForm(true);
  };

  return (
    <div className="basket-page">
      <div className="containerb">
        <h1 className="basket-title">–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞</h1>
        
        {basketItems.length > 0 ? (
          <div className="basket-content">
            <div className="basket-items">
              {basketItems.map(item => (
                <div key={item.id} className="basket-item">
                  <div className="item-image">
                    <img src={item.image} alt={item.name} />
                  </div>
                  <div className="item-details">
                    <h3>{item.name}</h3>
                    <div className="item-price">{item.price} ‚ÇΩ/–∫–≥</div>
                    <div className="item-quantity">
                      <button 
                        className="quantity-btn" 
                        onClick={() => handleQuantityChange(item.id, -1)}
                      >
                        -
                      </button>
                      <span>{item.quantity}</span>
                      <button 
                        className="quantity-btn" 
                        onClick={() => handleQuantityChange(item.id, 1)}
                      >
                        +
                      </button>
                    </div>
                  </div>
                  <div className="item-total">
                    <div>{item.price * item.quantity} ‚ÇΩ</div>
                    <button 
                      className="remove-btn"
                      onClick={() => handleRemove(item.id)}
                    >
                      √ó
                    </button>
                  </div>
                </div>
              ))}
            </div>

            <div className="basket-summary">
              <h2>–ò—Ç–æ–≥–æ</h2>
              <div className="summary-row">
                <span>–¢–æ–≤–∞—Ä—ã ({basketItems.reduce((sum, item) => sum + item.quantity, 0)})</span>
                <span>{subtotal} ‚ÇΩ</span>
              </div>
              <div className="summary-row">
                <span>–î–æ—Å—Ç–∞–≤–∫–∞</span>
                <span>{deliveryFee} ‚ÇΩ</span>
              </div>
              <div className="summary-total">
                <span>–û–±—â–∞—è —Å—É–º–º–∞</span>
                <span>{total} ‚ÇΩ</span>
              </div>
              <button 
                onClick={handleCheckoutClick} 
                className="checkout-btn"
              >
                –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
              </button>
              <Link to="/" className="continue-shopping">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏</Link>
            </div>
          </div>
        ) : (
          <div className="empty-basket">
            <div className="empty-icon">üõí</div>
            <h2>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
            <p>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑</p>
            <Link to="/" className="shopping-btn">–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∫—É–ø–∫–∞–º</Link>
          </div>
        )}

        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ñ–æ—Ä–º–æ–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö */}
        {showContactForm && (
          <div className="contact-form-modal">
            <div className="contact-form-content">
              <h3>–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h3>
              <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞</p>
              
              <div className="form-group">
                <label>–í–∞—à–µ –∏–º—è:</label>
                <input
                  type="text"
                  name="name"
                  value={contactInfo.name}
                  onChange={handleInputChange}
                  placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                  required
                />
              </div>
              
              <div className="form-group">
                <label>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</label>
                <input
                  type="tel"
                  name="phone"
                  value={contactInfo.phone}
                  onChange={handleInputChange}
                  placeholder="+996 (770) 23-45-67"
                  required
                />
              </div>
              
              <div className="form-group">
                <label>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:</label>
                <textarea
                  name="address"
                  value={contactInfo.address}
                  onChange={handleInputChange}
                  placeholder="–ì–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                  required
                />
              </div>
              
              <div className="form-buttons">
                <button 
                  onClick={sendOrderToTelegram}
                  className="submit-order-btn"
                >
                  –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑
                </button>
                <button 
                  onClick={() => setShowContactForm(false)}
                  className="cancel-order-btn"
                >
                  –û—Ç–º–µ–Ω–∏—Ç—å
                </button>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default Basket;
